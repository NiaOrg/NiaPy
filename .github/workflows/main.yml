name: Build, Check, and Test

on: [pull_request, push]

jobs:
  build_and_test: # run lint, codestyle, docstyle, and incremental tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']
    env:
      MPLBACKEND: "agg"
      DISABLE_COVERAGE: true
      PIPENV_VENV_IN_PROJECT: 1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
      run: |
        python3 -m pip install --upgrade pip
        pip install pipenv
        pwd
    - name: Install dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        pipenv install --skip-lock --dev
    - name: Lint with flake8
      run: |
        pipenv run flake8 niapy tests scent.py setup.py
    - name: Check codestyle
      run: |
        pipenv run pycodestyle niapy tests scent.py setup.py --config=.pycodestyle.ini
    - name: Check docstyle
      run: |
        pipenv run pydocstyle niapy tests scent.py setup.py
    - name: List files
      run: |
        pwd
        ls -alh
        ls -alh ../